---
apiVersion: charts.kubealex.com/v1
kind: K8SMediaserver
metadata:
  name: k8smediaserver-sample
spec:
  # Default values copied from <project_dir>/helm-charts/k8s-mediaserver/values.yaml
  general:
    ingress_host: # 10.70.154.11 # k8s-mediaserver.k8s.test
    plex_ingress_host: # 10.70.154.12 # k8s-plex.k8s.test
    image_tag: latest
    # UID to run the process with
    puid: 1000
    # GID to run the process with
    pgid: 1000
    # Persistent storage selections and pathing
    storage:
      customVolume: true  # set to true if not using a PVC (must provide volume below)
      pvcName: mediaserver-pvc
      size: 5Gi
      accessMode: "ReadWriteMany"
      pvcStorageClass: ""
      # the path starting from the top level of the pv you're passing. If your share is server.local/share/, then tv is server.local/share/media/tv
      subPaths:
        tv: media/tv
        movies: media/movies
        downloads: downloads
        transmission: transmission
        sabnzbd: sabnzbd
        config: config
      volumes:
        nfs:
          server: 10.70.154.1
          path: /srv/nfs/shared/media-server
      # volumes: {}
      #  hostPath:
      #    path: /mnt/share
    ingress:
      ingressClassName: "nginx" #

  sonarr:
    enabled: true
    container:
      image: docker.io/linuxserver/sonarr
      nodeSelector: {}
      port: 8989
    service:
      annotations:
        metallb.universe.tf/allow-shared-ip: shared-ip-group
      type: LoadBalancer
      port: 8989
      nodePort:
      extraLBService: false
      # Defines an additional LB service, requires cloud provider service or MetalLB
      # extraLBService:
      #  annotations:
      #    my-annotation: my-value
    ingress:
      enabled: true
      annotations: {}
      path: /sonarr
      tls:
        enabled: false
        secretName: ""
    resources: {}
    volume: {}
    # name: pvc-sonarr-config
    # storageClassName: longhorn
    # annotations:
    #   my-annotation/test: my-value
    # labels:
    #   my-label/test: my-other-value
    # accessModes: ReadWriteOnce
    # storage: 5Gi
    # selector: {}

  radarr:
    enabled: true
    container:
      image: docker.io/linuxserver/radarr
      nodeSelector: {}
      port: 7878
    service:
      annotations:
        metallb.universe.tf/allow-shared-ip: shared-ip-group
      type: LoadBalancer
      port: 7878
      nodePort:
      extraLBService: false
      # Defines an additional LB service, requires cloud provider service or MetalLB
      # extraLBService:
      #  annotations:
      #    my-annotation: my-value
    ingress:
      enabled: true
      annotations: {}
      path: /radarr
      tls:
        enabled: false
        secretName: ""
    resources: {}
    volume: {}
    # name: pvc-radarr-config
    # storageClassName: longhorn
    # annotations: {}
    # labels: {}
    # accessModes: ReadWriteOnce
    # storage: 5Gi
    # selector: {}

  jackett:
    enabled: true
    container:
      image: docker.io/linuxserver/jackett
      nodeSelector: {}
      port: 9117
    service:
      annotations:
        metallb.universe.tf/allow-shared-ip: shared-ip-group
      type: LoadBalancer
      port: 9117
      nodePort:
      extraLBService: false
      # Defines an additional LB service, requires cloud provider service or MetalLB
      # extraLBService:
      #  annotations:
      #    my-annotation: my-value
    ingress:
      enabled: true
      annotations: {}
      path: /jackett
      tls:
        enabled: false
        secretName: ""
    resources: {}
    volume: {}
    #  name: pvc-jackett-config
    #  storageClassName: longhorn
    #  annotations: {}
    #  labels: {}
    #  accessModes: ReadWriteOnce
    #  storage: 5Gi
    #  selector: {}

  transmission:
    enabled: true
    container:
      image: docker.io/linuxserver/transmission
      nodeSelector: {}
      port:
        utp: 9091
        peer: 51413
    service:
      annotations:
        metallb.universe.tf/allow-shared-ip: shared-ip-group
      utp:
        type: LoadBalancer
        port: 9091
        nodePort:
        # Defines an additional LB service, requires cloud provider service or MetalLB
        extraLBService: false
      peer:
        type: LoadBalancer
        port: 51413
        nodePort:
        nodePortUDP:
        # Defines an additional LB service, requires cloud provider service or MetalLB
        extraLBService: false
        # extraLBService:
        #  annotations:
        #    my-annotation: my-value
    ingress:
      enabled: true
      annotations: {}
      path: /transmission
      tls:
        enabled: false
        secretName: ""
    config:
      auth:
        enabled: false
        username: ""
        password: ""
    resources: {}
    volume: {}
    #  name: pvc-transmission-config
    #  storageClassName: longhorn
    #  annotations: {}
    #  labels: {}
    #  accessModes: ReadWriteOnce
    #  storage: 5Gi
    #  selector: {}

  sabnzbd:
    enabled: true
    container:
      image: docker.io/linuxserver/sabnzbd
      nodeSelector: {}
      port:
        http: 8080
        https: 9090
    service:
      annotations:
        metallb.universe.tf/allow-shared-ip: shared-ip-group
      http:
        type: LoadBalancer
        port: 8080
        nodePort:
        # Defines an additional LB service, requires cloud provider service or MetalLB
        extraLBService: false
      https:
        type: LoadBalancer
        port: 9090
        nodePort:
        # Defines an additional LB service, requires cloud provider service or MetalLB
        extraLBService: false
        # extraLBService:
        #  annotations:
        #    my-annotation: my-value
    ingress:
      enabled: true
      annotations: {}
      path: /sabnzbd
      tls:
        enabled: false
        secretName: ""
    resources: {}
    volume: {}
    #  name: pvc-plex-config
    #  storageClassName: longhorn
    #  annotations: {}
    #  labels: {}
    #  accessModes: ReadWriteOnce
    #  storage: 5Gi
    #  selector: {}

  prowlarr:
    enabled: true
    container:
      image: docker.io/linuxserver/prowlarr
      tag: develop
      nodeSelector: {}
      port: 9696
    service:
      annotations:
        metallb.universe.tf/allow-shared-ip: shared-ip-group
      type: LoadBalancer
      port: 9696
      nodePort:
      extraLBService: false
    ingress:
      enabled: true
      annotations: {}
      path: /prowlarr
      tls:
        enabled: false
        secretName: ""
    resources: {}
    volume: {}

  plex:
    enabled: true
    claim: "CHANGEME"
    replicaCount: 1
    container:
      image: docker.io/linuxserver/plex
      nodeSelector: {}
      port: 32400
    service:
      annotations:
        metallb.universe.tf/allow-shared-ip: shared-ip-group
      type: LoadBalancer
      port: 32400
      nodePort:
      # Defines an additional LB service, requires cloud provider service or MetalLB
      extraLBService: false
    ingress:
      enabled: true
      annotations: {}
      tls:
        enabled: false
        secretName: ""
    resources: {}
    #  limits:
    #    cpu: 100m
    #    memory: 100Mi
    #  requests:
    #    cpu: 100m
    #    memory: 100Mi
    volume: {}
    #  name: pvc-plex-config
    #  storageClassName: longhorn
    #  annotations: {}
    #  labels: {}
    #  accessModes: ReadWriteOnce
    #  storage: 5Gi
    #  selector: {}
